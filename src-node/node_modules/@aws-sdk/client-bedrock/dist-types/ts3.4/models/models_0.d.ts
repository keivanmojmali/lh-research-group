import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { BedrockServiceException as __BaseException } from "./BedrockServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export type EvaluationDatasetLocation =
  | EvaluationDatasetLocation.S3UriMember
  | EvaluationDatasetLocation.$UnknownMember;
export declare namespace EvaluationDatasetLocation {
  interface S3UriMember {
    s3Uri: string;
    $unknown?: never;
  }
  interface $UnknownMember {
    s3Uri?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    s3Uri: (value: string) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: EvaluationDatasetLocation, visitor: Visitor<T>) => T;
}
export interface EvaluationDataset {
  name: string | undefined;
  datasetLocation?: EvaluationDatasetLocation;
}
export declare const EvaluationTaskType: {
  readonly CLASSIFICATION: "Classification";
  readonly CUSTOM: "Custom";
  readonly GENERATION: "Generation";
  readonly QUESTION_AND_ANSWER: "QuestionAndAnswer";
  readonly SUMMARIZATION: "Summarization";
};
export type EvaluationTaskType =
  (typeof EvaluationTaskType)[keyof typeof EvaluationTaskType];
export interface EvaluationDatasetMetricConfig {
  taskType: EvaluationTaskType | undefined;
  dataset: EvaluationDataset | undefined;
  metricNames: string[] | undefined;
}
export interface AutomatedEvaluationConfig {
  datasetMetricConfigs: EvaluationDatasetMetricConfig[] | undefined;
}
export interface HumanEvaluationCustomMetric {
  name: string | undefined;
  description?: string;
  ratingMethod: string | undefined;
}
export interface HumanWorkflowConfig {
  flowDefinitionArn: string | undefined;
  instructions?: string;
}
export interface HumanEvaluationConfig {
  humanWorkflowConfig?: HumanWorkflowConfig;
  customMetrics?: HumanEvaluationCustomMetric[];
  datasetMetricConfigs: EvaluationDatasetMetricConfig[] | undefined;
}
export type EvaluationConfig =
  | EvaluationConfig.AutomatedMember
  | EvaluationConfig.HumanMember
  | EvaluationConfig.$UnknownMember;
export declare namespace EvaluationConfig {
  interface AutomatedMember {
    automated: AutomatedEvaluationConfig;
    human?: never;
    $unknown?: never;
  }
  interface HumanMember {
    automated?: never;
    human: HumanEvaluationConfig;
    $unknown?: never;
  }
  interface $UnknownMember {
    automated?: never;
    human?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    automated: (value: AutomatedEvaluationConfig) => T;
    human: (value: HumanEvaluationConfig) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: EvaluationConfig, visitor: Visitor<T>) => T;
}
export interface EvaluationBedrockModel {
  modelIdentifier: string | undefined;
  inferenceParams: string | undefined;
}
export type EvaluationModelConfig =
  | EvaluationModelConfig.BedrockModelMember
  | EvaluationModelConfig.$UnknownMember;
export declare namespace EvaluationModelConfig {
  interface BedrockModelMember {
    bedrockModel: EvaluationBedrockModel;
    $unknown?: never;
  }
  interface $UnknownMember {
    bedrockModel?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    bedrockModel: (value: EvaluationBedrockModel) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: EvaluationModelConfig, visitor: Visitor<T>) => T;
}
export type EvaluationInferenceConfig =
  | EvaluationInferenceConfig.ModelsMember
  | EvaluationInferenceConfig.$UnknownMember;
export declare namespace EvaluationInferenceConfig {
  interface ModelsMember {
    models: EvaluationModelConfig[];
    $unknown?: never;
  }
  interface $UnknownMember {
    models?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    models: (value: EvaluationModelConfig[]) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: EvaluationInferenceConfig, visitor: Visitor<T>) => T;
}
export interface Tag {
  key: string | undefined;
  value: string | undefined;
}
export interface EvaluationOutputDataConfig {
  s3Uri: string | undefined;
}
export interface CreateEvaluationJobRequest {
  jobName: string | undefined;
  jobDescription?: string;
  clientRequestToken?: string;
  roleArn: string | undefined;
  customerEncryptionKeyId?: string;
  jobTags?: Tag[];
  evaluationConfig: EvaluationConfig | undefined;
  inferenceConfig: EvaluationInferenceConfig | undefined;
  outputDataConfig: EvaluationOutputDataConfig | undefined;
}
export interface CreateEvaluationJobResponse {
  jobArn: string | undefined;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface GetEvaluationJobRequest {
  jobIdentifier: string | undefined;
}
export declare const EvaluationJobType: {
  readonly AUTOMATED: "Automated";
  readonly HUMAN: "Human";
};
export type EvaluationJobType =
  (typeof EvaluationJobType)[keyof typeof EvaluationJobType];
export declare const EvaluationJobStatus: {
  readonly COMPLETED: "Completed";
  readonly FAILED: "Failed";
  readonly IN_PROGRESS: "InProgress";
  readonly STOPPED: "Stopped";
  readonly STOPPING: "Stopping";
};
export type EvaluationJobStatus =
  (typeof EvaluationJobStatus)[keyof typeof EvaluationJobStatus];
export interface GetEvaluationJobResponse {
  jobName: string | undefined;
  status: EvaluationJobStatus | undefined;
  jobArn: string | undefined;
  jobDescription?: string;
  roleArn: string | undefined;
  customerEncryptionKeyId?: string;
  jobType: EvaluationJobType | undefined;
  evaluationConfig: EvaluationConfig | undefined;
  inferenceConfig: EvaluationInferenceConfig | undefined;
  outputDataConfig: EvaluationOutputDataConfig | undefined;
  creationTime: Date | undefined;
  lastModifiedTime?: Date;
  failureMessages?: string[];
}
export declare const SortJobsBy: {
  readonly CREATION_TIME: "CreationTime";
};
export type SortJobsBy = (typeof SortJobsBy)[keyof typeof SortJobsBy];
export declare const SortOrder: {
  readonly ASCENDING: "Ascending";
  readonly DESCENDING: "Descending";
};
export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder];
export interface ListEvaluationJobsRequest {
  creationTimeAfter?: Date;
  creationTimeBefore?: Date;
  statusEquals?: EvaluationJobStatus;
  nameContains?: string;
  maxResults?: number;
  nextToken?: string;
  sortBy?: SortJobsBy;
  sortOrder?: SortOrder;
}
export interface EvaluationSummary {
  jobArn: string | undefined;
  jobName: string | undefined;
  status: EvaluationJobStatus | undefined;
  creationTime: Date | undefined;
  jobType: EvaluationJobType | undefined;
  evaluationTaskTypes: EvaluationTaskType[] | undefined;
  modelIdentifiers: string[] | undefined;
}
export interface ListEvaluationJobsResponse {
  nextToken?: string;
  jobSummaries?: EvaluationSummary[];
}
export interface StopEvaluationJobRequest {
  jobIdentifier: string | undefined;
}
export interface StopEvaluationJobResponse {}
export declare const GuardrailFilterStrength: {
  readonly HIGH: "HIGH";
  readonly LOW: "LOW";
  readonly MEDIUM: "MEDIUM";
  readonly NONE: "NONE";
};
export type GuardrailFilterStrength =
  (typeof GuardrailFilterStrength)[keyof typeof GuardrailFilterStrength];
export declare const GuardrailContentFilterType: {
  readonly HATE: "HATE";
  readonly INSULTS: "INSULTS";
  readonly MISCONDUCT: "MISCONDUCT";
  readonly PROMPT_ATTACK: "PROMPT_ATTACK";
  readonly SEXUAL: "SEXUAL";
  readonly VIOLENCE: "VIOLENCE";
};
export type GuardrailContentFilterType =
  (typeof GuardrailContentFilterType)[keyof typeof GuardrailContentFilterType];
export interface GuardrailContentFilterConfig {
  type: GuardrailContentFilterType | undefined;
  inputStrength: GuardrailFilterStrength | undefined;
  outputStrength: GuardrailFilterStrength | undefined;
}
export interface GuardrailContentPolicyConfig {
  filtersConfig: GuardrailContentFilterConfig[] | undefined;
}
export declare const GuardrailSensitiveInformationAction: {
  readonly ANONYMIZE: "ANONYMIZE";
  readonly BLOCK: "BLOCK";
};
export type GuardrailSensitiveInformationAction =
  (typeof GuardrailSensitiveInformationAction)[keyof typeof GuardrailSensitiveInformationAction];
export declare const GuardrailPiiEntityType: {
  readonly ADDRESS: "ADDRESS";
  readonly AGE: "AGE";
  readonly AWS_ACCESS_KEY: "AWS_ACCESS_KEY";
  readonly AWS_SECRET_KEY: "AWS_SECRET_KEY";
  readonly CA_HEALTH_NUMBER: "CA_HEALTH_NUMBER";
  readonly CA_SOCIAL_INSURANCE_NUMBER: "CA_SOCIAL_INSURANCE_NUMBER";
  readonly CREDIT_DEBIT_CARD_CVV: "CREDIT_DEBIT_CARD_CVV";
  readonly CREDIT_DEBIT_CARD_EXPIRY: "CREDIT_DEBIT_CARD_EXPIRY";
  readonly CREDIT_DEBIT_CARD_NUMBER: "CREDIT_DEBIT_CARD_NUMBER";
  readonly DRIVER_ID: "DRIVER_ID";
  readonly EMAIL: "EMAIL";
  readonly INTERNATIONAL_BANK_ACCOUNT_NUMBER: "INTERNATIONAL_BANK_ACCOUNT_NUMBER";
  readonly IP_ADDRESS: "IP_ADDRESS";
  readonly LICENSE_PLATE: "LICENSE_PLATE";
  readonly MAC_ADDRESS: "MAC_ADDRESS";
  readonly NAME: "NAME";
  readonly PASSWORD: "PASSWORD";
  readonly PHONE: "PHONE";
  readonly PIN: "PIN";
  readonly SWIFT_CODE: "SWIFT_CODE";
  readonly UK_NATIONAL_HEALTH_SERVICE_NUMBER: "UK_NATIONAL_HEALTH_SERVICE_NUMBER";
  readonly UK_NATIONAL_INSURANCE_NUMBER: "UK_NATIONAL_INSURANCE_NUMBER";
  readonly UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER: "UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER";
  readonly URL: "URL";
  readonly USERNAME: "USERNAME";
  readonly US_BANK_ACCOUNT_NUMBER: "US_BANK_ACCOUNT_NUMBER";
  readonly US_BANK_ROUTING_NUMBER: "US_BANK_ROUTING_NUMBER";
  readonly US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER: "US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER";
  readonly US_PASSPORT_NUMBER: "US_PASSPORT_NUMBER";
  readonly US_SOCIAL_SECURITY_NUMBER: "US_SOCIAL_SECURITY_NUMBER";
  readonly VEHICLE_IDENTIFICATION_NUMBER: "VEHICLE_IDENTIFICATION_NUMBER";
};
export type GuardrailPiiEntityType =
  (typeof GuardrailPiiEntityType)[keyof typeof GuardrailPiiEntityType];
export interface GuardrailPiiEntityConfig {
  type: GuardrailPiiEntityType | undefined;
  action: GuardrailSensitiveInformationAction | undefined;
}
export interface GuardrailRegexConfig {
  name: string | undefined;
  description?: string;
  pattern: string | undefined;
  action: GuardrailSensitiveInformationAction | undefined;
}
export interface GuardrailSensitiveInformationPolicyConfig {
  piiEntitiesConfig?: GuardrailPiiEntityConfig[];
  regexesConfig?: GuardrailRegexConfig[];
}
export declare const GuardrailTopicType: {
  readonly DENY: "DENY";
};
export type GuardrailTopicType =
  (typeof GuardrailTopicType)[keyof typeof GuardrailTopicType];
export interface GuardrailTopicConfig {
  name: string | undefined;
  definition: string | undefined;
  examples?: string[];
  type: GuardrailTopicType | undefined;
}
export interface GuardrailTopicPolicyConfig {
  topicsConfig: GuardrailTopicConfig[] | undefined;
}
export declare const GuardrailManagedWordsType: {
  readonly PROFANITY: "PROFANITY";
};
export type GuardrailManagedWordsType =
  (typeof GuardrailManagedWordsType)[keyof typeof GuardrailManagedWordsType];
export interface GuardrailManagedWordsConfig {
  type: GuardrailManagedWordsType | undefined;
}
export interface GuardrailWordConfig {
  text: string | undefined;
}
export interface GuardrailWordPolicyConfig {
  wordsConfig?: GuardrailWordConfig[];
  managedWordListsConfig?: GuardrailManagedWordsConfig[];
}
export interface CreateGuardrailRequest {
  name: string | undefined;
  description?: string;
  topicPolicyConfig?: GuardrailTopicPolicyConfig;
  contentPolicyConfig?: GuardrailContentPolicyConfig;
  wordPolicyConfig?: GuardrailWordPolicyConfig;
  sensitiveInformationPolicyConfig?: GuardrailSensitiveInformationPolicyConfig;
  blockedInputMessaging: string | undefined;
  blockedOutputsMessaging: string | undefined;
  kmsKeyId?: string;
  tags?: Tag[];
  clientRequestToken?: string;
}
export interface CreateGuardrailResponse {
  guardrailId: string | undefined;
  guardrailArn: string | undefined;
  version: string | undefined;
  createdAt: Date | undefined;
}
export declare class TooManyTagsException extends __BaseException {
  readonly name: "TooManyTagsException";
  readonly $fault: "client";
  resourceName?: string;
  constructor(
    opts: __ExceptionOptionType<TooManyTagsException, __BaseException>
  );
}
export interface CreateGuardrailVersionRequest {
  guardrailIdentifier: string | undefined;
  description?: string;
  clientRequestToken?: string;
}
export interface CreateGuardrailVersionResponse {
  guardrailId: string | undefined;
  version: string | undefined;
}
export interface DeleteGuardrailRequest {
  guardrailIdentifier: string | undefined;
  guardrailVersion?: string;
}
export interface DeleteGuardrailResponse {}
export interface GetGuardrailRequest {
  guardrailIdentifier: string | undefined;
  guardrailVersion?: string;
}
export interface GuardrailContentFilter {
  type: GuardrailContentFilterType | undefined;
  inputStrength: GuardrailFilterStrength | undefined;
  outputStrength: GuardrailFilterStrength | undefined;
}
export interface GuardrailContentPolicy {
  filters?: GuardrailContentFilter[];
}
export interface GuardrailPiiEntity {
  type: GuardrailPiiEntityType | undefined;
  action: GuardrailSensitiveInformationAction | undefined;
}
export interface GuardrailRegex {
  name: string | undefined;
  description?: string;
  pattern: string | undefined;
  action: GuardrailSensitiveInformationAction | undefined;
}
export interface GuardrailSensitiveInformationPolicy {
  piiEntities?: GuardrailPiiEntity[];
  regexes?: GuardrailRegex[];
}
export declare const GuardrailStatus: {
  readonly CREATING: "CREATING";
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly READY: "READY";
  readonly UPDATING: "UPDATING";
  readonly VERSIONING: "VERSIONING";
};
export type GuardrailStatus =
  (typeof GuardrailStatus)[keyof typeof GuardrailStatus];
export interface GuardrailTopic {
  name: string | undefined;
  definition: string | undefined;
  examples?: string[];
  type?: GuardrailTopicType;
}
export interface GuardrailTopicPolicy {
  topics: GuardrailTopic[] | undefined;
}
export interface GuardrailManagedWords {
  type: GuardrailManagedWordsType | undefined;
}
export interface GuardrailWord {
  text: string | undefined;
}
export interface GuardrailWordPolicy {
  words?: GuardrailWord[];
  managedWordLists?: GuardrailManagedWords[];
}
export interface GetGuardrailResponse {
  name: string | undefined;
  description?: string;
  guardrailId: string | undefined;
  guardrailArn: string | undefined;
  version: string | undefined;
  status: GuardrailStatus | undefined;
  topicPolicy?: GuardrailTopicPolicy;
  contentPolicy?: GuardrailContentPolicy;
  wordPolicy?: GuardrailWordPolicy;
  sensitiveInformationPolicy?: GuardrailSensitiveInformationPolicy;
  createdAt: Date | undefined;
  updatedAt: Date | undefined;
  statusReasons?: string[];
  failureRecommendations?: string[];
  blockedInputMessaging: string | undefined;
  blockedOutputsMessaging: string | undefined;
  kmsKeyArn?: string;
}
export interface ListGuardrailsRequest {
  guardrailIdentifier?: string;
  maxResults?: number;
  nextToken?: string;
}
export interface GuardrailSummary {
  id: string | undefined;
  arn: string | undefined;
  status: GuardrailStatus | undefined;
  name: string | undefined;
  description?: string;
  version: string | undefined;
  createdAt: Date | undefined;
  updatedAt: Date | undefined;
}
export interface ListGuardrailsResponse {
  guardrails: GuardrailSummary[] | undefined;
  nextToken?: string;
}
export interface UpdateGuardrailRequest {
  guardrailIdentifier: string | undefined;
  name: string | undefined;
  description?: string;
  topicPolicyConfig?: GuardrailTopicPolicyConfig;
  contentPolicyConfig?: GuardrailContentPolicyConfig;
  wordPolicyConfig?: GuardrailWordPolicyConfig;
  sensitiveInformationPolicyConfig?: GuardrailSensitiveInformationPolicyConfig;
  blockedInputMessaging: string | undefined;
  blockedOutputsMessaging: string | undefined;
  kmsKeyId?: string;
}
export interface UpdateGuardrailResponse {
  guardrailId: string | undefined;
  guardrailArn: string | undefined;
  version: string | undefined;
  updatedAt: Date | undefined;
}
export interface DeleteModelInvocationLoggingConfigurationRequest {}
export interface DeleteModelInvocationLoggingConfigurationResponse {}
export interface GetModelInvocationLoggingConfigurationRequest {}
export interface S3Config {
  bucketName: string | undefined;
  keyPrefix?: string;
}
export interface CloudWatchConfig {
  logGroupName: string | undefined;
  roleArn: string | undefined;
  largeDataDeliveryS3Config?: S3Config;
}
export interface LoggingConfig {
  cloudWatchConfig?: CloudWatchConfig;
  s3Config?: S3Config;
  textDataDeliveryEnabled?: boolean;
  imageDataDeliveryEnabled?: boolean;
  embeddingDataDeliveryEnabled?: boolean;
}
export interface GetModelInvocationLoggingConfigurationResponse {
  loggingConfig?: LoggingConfig;
}
export interface PutModelInvocationLoggingConfigurationRequest {
  loggingConfig: LoggingConfig | undefined;
}
export interface PutModelInvocationLoggingConfigurationResponse {}
export interface DeleteCustomModelRequest {
  modelIdentifier: string | undefined;
}
export interface DeleteCustomModelResponse {}
export interface GetCustomModelRequest {
  modelIdentifier: string | undefined;
}
export declare const CustomizationType: {
  readonly CONTINUED_PRE_TRAINING: "CONTINUED_PRE_TRAINING";
  readonly FINE_TUNING: "FINE_TUNING";
};
export type CustomizationType =
  (typeof CustomizationType)[keyof typeof CustomizationType];
export interface OutputDataConfig {
  s3Uri: string | undefined;
}
export interface TrainingDataConfig {
  s3Uri: string | undefined;
}
export interface TrainingMetrics {
  trainingLoss?: number;
}
export interface Validator {
  s3Uri: string | undefined;
}
export interface ValidationDataConfig {
  validators: Validator[] | undefined;
}
export interface ValidatorMetric {
  validationLoss?: number;
}
export interface GetCustomModelResponse {
  modelArn: string | undefined;
  modelName: string | undefined;
  jobName?: string;
  jobArn: string | undefined;
  baseModelArn: string | undefined;
  customizationType?: CustomizationType;
  modelKmsKeyArn?: string;
  hyperParameters?: Record<string, string>;
  trainingDataConfig: TrainingDataConfig | undefined;
  validationDataConfig?: ValidationDataConfig;
  outputDataConfig: OutputDataConfig | undefined;
  trainingMetrics?: TrainingMetrics;
  validationMetrics?: ValidatorMetric[];
  creationTime: Date | undefined;
}
export interface GetFoundationModelRequest {
  modelIdentifier: string | undefined;
}
export declare const ModelCustomization: {
  readonly CONTINUED_PRE_TRAINING: "CONTINUED_PRE_TRAINING";
  readonly FINE_TUNING: "FINE_TUNING";
};
export type ModelCustomization =
  (typeof ModelCustomization)[keyof typeof ModelCustomization];
export declare const InferenceType: {
  readonly ON_DEMAND: "ON_DEMAND";
  readonly PROVISIONED: "PROVISIONED";
};
export type InferenceType = (typeof InferenceType)[keyof typeof InferenceType];
export declare const ModelModality: {
  readonly EMBEDDING: "EMBEDDING";
  readonly IMAGE: "IMAGE";
  readonly TEXT: "TEXT";
};
export type ModelModality = (typeof ModelModality)[keyof typeof ModelModality];
export declare const FoundationModelLifecycleStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly LEGACY: "LEGACY";
};
export type FoundationModelLifecycleStatus =
  (typeof FoundationModelLifecycleStatus)[keyof typeof FoundationModelLifecycleStatus];
export interface FoundationModelLifecycle {
  status: FoundationModelLifecycleStatus | undefined;
}
export interface FoundationModelDetails {
  modelArn: string | undefined;
  modelId: string | undefined;
  modelName?: string;
  providerName?: string;
  inputModalities?: ModelModality[];
  outputModalities?: ModelModality[];
  responseStreamingSupported?: boolean;
  customizationsSupported?: ModelCustomization[];
  inferenceTypesSupported?: InferenceType[];
  modelLifecycle?: FoundationModelLifecycle;
}
export interface GetFoundationModelResponse {
  modelDetails?: FoundationModelDetails;
}
export declare const SortModelsBy: {
  readonly CREATION_TIME: "CreationTime";
};
export type SortModelsBy = (typeof SortModelsBy)[keyof typeof SortModelsBy];
export interface ListCustomModelsRequest {
  creationTimeBefore?: Date;
  creationTimeAfter?: Date;
  nameContains?: string;
  baseModelArnEquals?: string;
  foundationModelArnEquals?: string;
  maxResults?: number;
  nextToken?: string;
  sortBy?: SortModelsBy;
  sortOrder?: SortOrder;
}
export interface CustomModelSummary {
  modelArn: string | undefined;
  modelName: string | undefined;
  creationTime: Date | undefined;
  baseModelArn: string | undefined;
  baseModelName: string | undefined;
  customizationType?: CustomizationType;
}
export interface ListCustomModelsResponse {
  nextToken?: string;
  modelSummaries?: CustomModelSummary[];
}
export interface ListFoundationModelsRequest {
  byProvider?: string;
  byCustomizationType?: ModelCustomization;
  byOutputModality?: ModelModality;
  byInferenceType?: InferenceType;
}
export interface FoundationModelSummary {
  modelArn: string | undefined;
  modelId: string | undefined;
  modelName?: string;
  providerName?: string;
  inputModalities?: ModelModality[];
  outputModalities?: ModelModality[];
  responseStreamingSupported?: boolean;
  customizationsSupported?: ModelCustomization[];
  inferenceTypesSupported?: InferenceType[];
  modelLifecycle?: FoundationModelLifecycle;
}
export interface ListFoundationModelsResponse {
  modelSummaries?: FoundationModelSummary[];
}
export declare const CommitmentDuration: {
  readonly ONE_MONTH: "OneMonth";
  readonly SIX_MONTHS: "SixMonths";
};
export type CommitmentDuration =
  (typeof CommitmentDuration)[keyof typeof CommitmentDuration];
export interface CreateProvisionedModelThroughputRequest {
  clientRequestToken?: string;
  modelUnits: number | undefined;
  provisionedModelName: string | undefined;
  modelId: string | undefined;
  commitmentDuration?: CommitmentDuration;
  tags?: Tag[];
}
export interface CreateProvisionedModelThroughputResponse {
  provisionedModelArn: string | undefined;
}
export interface DeleteProvisionedModelThroughputRequest {
  provisionedModelId: string | undefined;
}
export interface DeleteProvisionedModelThroughputResponse {}
export interface GetProvisionedModelThroughputRequest {
  provisionedModelId: string | undefined;
}
export declare const ProvisionedModelStatus: {
  readonly CREATING: "Creating";
  readonly FAILED: "Failed";
  readonly IN_SERVICE: "InService";
  readonly UPDATING: "Updating";
};
export type ProvisionedModelStatus =
  (typeof ProvisionedModelStatus)[keyof typeof ProvisionedModelStatus];
export interface GetProvisionedModelThroughputResponse {
  modelUnits: number | undefined;
  desiredModelUnits: number | undefined;
  provisionedModelName: string | undefined;
  provisionedModelArn: string | undefined;
  modelArn: string | undefined;
  desiredModelArn: string | undefined;
  foundationModelArn: string | undefined;
  status: ProvisionedModelStatus | undefined;
  creationTime: Date | undefined;
  lastModifiedTime: Date | undefined;
  failureMessage?: string;
  commitmentDuration?: CommitmentDuration;
  commitmentExpirationTime?: Date;
}
export declare const SortByProvisionedModels: {
  readonly CREATION_TIME: "CreationTime";
};
export type SortByProvisionedModels =
  (typeof SortByProvisionedModels)[keyof typeof SortByProvisionedModels];
export interface ListProvisionedModelThroughputsRequest {
  creationTimeAfter?: Date;
  creationTimeBefore?: Date;
  statusEquals?: ProvisionedModelStatus;
  modelArnEquals?: string;
  nameContains?: string;
  maxResults?: number;
  nextToken?: string;
  sortBy?: SortByProvisionedModels;
  sortOrder?: SortOrder;
}
export interface ProvisionedModelSummary {
  provisionedModelName: string | undefined;
  provisionedModelArn: string | undefined;
  modelArn: string | undefined;
  desiredModelArn: string | undefined;
  foundationModelArn: string | undefined;
  modelUnits: number | undefined;
  desiredModelUnits: number | undefined;
  status: ProvisionedModelStatus | undefined;
  commitmentDuration?: CommitmentDuration;
  commitmentExpirationTime?: Date;
  creationTime: Date | undefined;
  lastModifiedTime: Date | undefined;
}
export interface ListProvisionedModelThroughputsResponse {
  nextToken?: string;
  provisionedModelSummaries?: ProvisionedModelSummary[];
}
export interface UpdateProvisionedModelThroughputRequest {
  provisionedModelId: string | undefined;
  desiredProvisionedModelName?: string;
  desiredModelId?: string;
}
export interface UpdateProvisionedModelThroughputResponse {}
export interface ListTagsForResourceRequest {
  resourceARN: string | undefined;
}
export interface ListTagsForResourceResponse {
  tags?: Tag[];
}
export interface TagResourceRequest {
  resourceARN: string | undefined;
  tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  resourceARN: string | undefined;
  tagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface VpcConfig {
  subnetIds: string[] | undefined;
  securityGroupIds: string[] | undefined;
}
export interface CreateModelCustomizationJobRequest {
  jobName: string | undefined;
  customModelName: string | undefined;
  roleArn: string | undefined;
  clientRequestToken?: string;
  baseModelIdentifier: string | undefined;
  customizationType?: CustomizationType;
  customModelKmsKeyId?: string;
  jobTags?: Tag[];
  customModelTags?: Tag[];
  trainingDataConfig: TrainingDataConfig | undefined;
  validationDataConfig?: ValidationDataConfig;
  outputDataConfig: OutputDataConfig | undefined;
  hyperParameters: Record<string, string> | undefined;
  vpcConfig?: VpcConfig;
}
export interface CreateModelCustomizationJobResponse {
  jobArn: string | undefined;
}
export interface GetModelCustomizationJobRequest {
  jobIdentifier: string | undefined;
}
export declare const ModelCustomizationJobStatus: {
  readonly COMPLETED: "Completed";
  readonly FAILED: "Failed";
  readonly IN_PROGRESS: "InProgress";
  readonly STOPPED: "Stopped";
  readonly STOPPING: "Stopping";
};
export type ModelCustomizationJobStatus =
  (typeof ModelCustomizationJobStatus)[keyof typeof ModelCustomizationJobStatus];
export interface GetModelCustomizationJobResponse {
  jobArn: string | undefined;
  jobName: string | undefined;
  outputModelName: string | undefined;
  outputModelArn?: string;
  clientRequestToken?: string;
  roleArn: string | undefined;
  status?: ModelCustomizationJobStatus;
  failureMessage?: string;
  creationTime: Date | undefined;
  lastModifiedTime?: Date;
  endTime?: Date;
  baseModelArn: string | undefined;
  hyperParameters: Record<string, string> | undefined;
  trainingDataConfig: TrainingDataConfig | undefined;
  validationDataConfig: ValidationDataConfig | undefined;
  outputDataConfig: OutputDataConfig | undefined;
  customizationType?: CustomizationType;
  outputModelKmsKeyArn?: string;
  trainingMetrics?: TrainingMetrics;
  validationMetrics?: ValidatorMetric[];
  vpcConfig?: VpcConfig;
}
export declare const FineTuningJobStatus: {
  readonly COMPLETED: "Completed";
  readonly FAILED: "Failed";
  readonly IN_PROGRESS: "InProgress";
  readonly STOPPED: "Stopped";
  readonly STOPPING: "Stopping";
};
export type FineTuningJobStatus =
  (typeof FineTuningJobStatus)[keyof typeof FineTuningJobStatus];
export interface ListModelCustomizationJobsRequest {
  creationTimeAfter?: Date;
  creationTimeBefore?: Date;
  statusEquals?: FineTuningJobStatus;
  nameContains?: string;
  maxResults?: number;
  nextToken?: string;
  sortBy?: SortJobsBy;
  sortOrder?: SortOrder;
}
export interface ModelCustomizationJobSummary {
  jobArn: string | undefined;
  baseModelArn: string | undefined;
  jobName: string | undefined;
  status: ModelCustomizationJobStatus | undefined;
  lastModifiedTime?: Date;
  creationTime: Date | undefined;
  endTime?: Date;
  customModelArn?: string;
  customModelName?: string;
  customizationType?: CustomizationType;
}
export interface ListModelCustomizationJobsResponse {
  nextToken?: string;
  modelCustomizationJobSummaries?: ModelCustomizationJobSummary[];
}
export interface StopModelCustomizationJobRequest {
  jobIdentifier: string | undefined;
}
export interface StopModelCustomizationJobResponse {}
export declare const EvaluationDatasetFilterSensitiveLog: (
  obj: EvaluationDataset
) => any;
export declare const EvaluationDatasetMetricConfigFilterSensitiveLog: (
  obj: EvaluationDatasetMetricConfig
) => any;
export declare const AutomatedEvaluationConfigFilterSensitiveLog: (
  obj: AutomatedEvaluationConfig
) => any;
export declare const HumanEvaluationCustomMetricFilterSensitiveLog: (
  obj: HumanEvaluationCustomMetric
) => any;
export declare const HumanWorkflowConfigFilterSensitiveLog: (
  obj: HumanWorkflowConfig
) => any;
export declare const HumanEvaluationConfigFilterSensitiveLog: (
  obj: HumanEvaluationConfig
) => any;
export declare const EvaluationConfigFilterSensitiveLog: (
  obj: EvaluationConfig
) => any;
export declare const EvaluationBedrockModelFilterSensitiveLog: (
  obj: EvaluationBedrockModel
) => any;
export declare const EvaluationModelConfigFilterSensitiveLog: (
  obj: EvaluationModelConfig
) => any;
export declare const EvaluationInferenceConfigFilterSensitiveLog: (
  obj: EvaluationInferenceConfig
) => any;
export declare const CreateEvaluationJobRequestFilterSensitiveLog: (
  obj: CreateEvaluationJobRequest
) => any;
export declare const GetEvaluationJobRequestFilterSensitiveLog: (
  obj: GetEvaluationJobRequest
) => any;
export declare const GetEvaluationJobResponseFilterSensitiveLog: (
  obj: GetEvaluationJobResponse
) => any;
export declare const StopEvaluationJobRequestFilterSensitiveLog: (
  obj: StopEvaluationJobRequest
) => any;
export declare const GuardrailTopicConfigFilterSensitiveLog: (
  obj: GuardrailTopicConfig
) => any;
export declare const GuardrailTopicPolicyConfigFilterSensitiveLog: (
  obj: GuardrailTopicPolicyConfig
) => any;
export declare const CreateGuardrailRequestFilterSensitiveLog: (
  obj: CreateGuardrailRequest
) => any;
export declare const CreateGuardrailVersionRequestFilterSensitiveLog: (
  obj: CreateGuardrailVersionRequest
) => any;
export declare const GuardrailTopicFilterSensitiveLog: (
  obj: GuardrailTopic
) => any;
export declare const GuardrailTopicPolicyFilterSensitiveLog: (
  obj: GuardrailTopicPolicy
) => any;
export declare const GetGuardrailResponseFilterSensitiveLog: (
  obj: GetGuardrailResponse
) => any;
export declare const GuardrailSummaryFilterSensitiveLog: (
  obj: GuardrailSummary
) => any;
export declare const ListGuardrailsResponseFilterSensitiveLog: (
  obj: ListGuardrailsResponse
) => any;
export declare const UpdateGuardrailRequestFilterSensitiveLog: (
  obj: UpdateGuardrailRequest
) => any;
